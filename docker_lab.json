{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This AWS CloudFormation template creates a Docker lab environment with one Master and two Nodes running Ubuntu 14.04 LTS with Docker installed ",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair.",
      "Default" : "MyMasterKey"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    }
,
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-22111148", "HVM64" : "ami-2d39803a", "HVMG2" : "ami-ebcec381"},
      "us-west-2"        : {"PV64" : "ami-792bc219", "HVM64" : "ami-42569022", "HVMG2" : "ami-0f28c06f"},
      "us-west-1"        : {"PV64" : "ami-0e087a6e", "HVM64" : "ami-992661f9", "HVMG2" : "ami-ab9defcb"},
      "eu-west-1"        : {"PV64" : "ami-a5368cd6", "HVM64" : "ami-5e6df72d", "HVMG2" : "ami-d1d652a2"},
      "eu-central-1"     : {"PV64" : "ami-2bde3944", "HVM64" : "ami-4bd03b24", "HVMG2" : "ami-5240a73d"},
      "ap-northeast-1"   : {"PV64" : "ami-37020959", "HVM64" : "ami-2e63924f", "HVMG2" : "ami-34a9a35a"},
      "ap-southeast-1"   : {"PV64" : "ami-ff0cc79c", "HVM64" : "ami-ea2bf989", "HVMG2" : "ami-6f6ca70c"},
      "ap-southeast-2"   : {"PV64" : "ami-f5210196", "HVM64" : "ami-396a415a", "HVMG2" : "ami-88c1e1eb"},
      "sa-east-1"        : {"PV64" : "ami-661e930a", "HVM64" : "ami-d952c7b5", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {

    "myVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.13.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [{
          "Key": "Name",
          "Value": "10.13.0.0/16"
        }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{
          "Key": "Name",
          "Value": "10.13.0.0/16"
        }]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "myVPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "SubnetAPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.13.0.0/20",
        "MapPublicIpOnLaunch": true,
        "VpcId": {"Ref": "myVPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "A public"
        }, {
        "Key": "Reach",
        "Value": "public"
        }]
      }
    },
    "SubnetBPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": ""}]},
        "CidrBlock": "10.13.32.0/20",
        "MapPublicIpOnLaunch": true,
        "VpcId": {"Ref": "myVPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "B public"
        }, {
        "Key": "Reach",
        "Value": "public"
        }]
      }
    },
    "RouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "myVPC"},
        "Tags": [{
          "Key": "Name",
          "Value": "Public"
        }]
      }
    },
    "RouteTableAssociationAPublic": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "SubnetAPublic"},
        "RouteTableId": {"Ref": "RouteTablePublic"}
      }
    },
    "RouteTablePublicInternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTablePublic"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "ClusterSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "Security to allow access between cluster instances",
        "VpcId" : {"Ref" : "myVPC"},
        "SecurityGroupIngress" : [
          {"IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : {
              "Fn::GetAtt": [
                "InstanceSecurityGroup",
                "GroupId"
              ]
            }
          }
        ]
      }
    },
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security group for Individual Cluseter systems",
        "VpcId" : {"Ref" : "myVPC"},
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ],
        "SecurityGroupEgress": [
          {"IpProtocol": "-1", "FromPort": "0","ToPort": "65535", "CidrIp": "0.0.0.0/0"}
        ]
      }
    },

    "Master" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" :  "t2.medium",
        "SubnetId" : {"Ref": "SubnetAPublic"}, 
        "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" }, { "Ref" : "ClusterSG" } ],
        "KeyName" : {"Ref" : "KeyName" },
        "Tags" : [{ "Key" : "Name", "Value" : "Master" }],
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", "t2.medium" , "Arch" ] } ] },
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : ["", [
               "#!/bin/bash\n",
                "apt-get update",
                "apt-get -y upgrade\n",
                "apt-get -y install apt-transport-https ca-certificates\n",
                "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n",
                "echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' >>/etc/apt/sources.list.d/docker.list\n",
                "apt-get update\n",
                "apt-get -y install docker-engine\n",
                "adduser --disabled-password --gecos 'Docker Lab Student' student\n",
                "echo 'student:docker' | chpasswd \n",
                "usermod -aG sudo student\n",
                "usermod -aG docker student\n",
                "service docker start\n\n"
              ]]
          }
        }

      }
    },

    "Node1" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" :  "t2.small",
        "Tags" : [{ "Key" : "Name", "Value" : "Node1" }],
        "SubnetId" : {"Ref": "SubnetAPublic"}, 
        "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" }, { "Ref" : "ClusterSG" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", "t2.small" , "Arch" ] } ] },
        "UserData" : {
          "Fn::Base64" : {
            "Fn::Join" : ["", [
               "#!/bin/bash\n",
                "apt-get update\n",
                "apt-get -y upgrade\n",
                "apt-get -y install apt-transport-https ca-certificates\n",
                "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n",
                "echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' >>/etc/apt/sources.list.d/docker.list\n",
                "apt-get update\n",
                "apt-get -y install docker-engine\n",
                "adduser --disabled-password --gecos 'Docker Lab Student' student\n",
                "echo 'student:docker' | chpasswd \n",
                "usermod -aG sudo student\n",
                "usermod -aG docker student\n",
                "service docker start\n\n"
              ]]
          }
        }

      }
    },

    "Node2" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" :  "t2.small",
        "SubnetId" : {"Ref": "SubnetAPublic"}, 
        "Tags" : [{ "Key" : "Name", "Value" : "Node2" }],
        "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" }, { "Ref" : "ClusterSG" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", "t2.small" , "Arch" ] } ] },
            "UserData" : {
              "Fn::Base64" : {
                "Fn::Join" : ["", [
                   "#!/bin/bash\n",
                    "apt-get update\n",
                    "apt-get -y upgrade\n",
                    "apt-get -y install apt-transport-https ca-certificates\n",
                    "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n",
                    "echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' >>/etc/apt/sources.list.d/docker.list\n",
                    "apt-get update\n",
                    "apt-get -y install docker-engine\n",
                    "adduser --disabled-password --gecos 'Docker Lab Student' student\n",
                    "echo 'student:docker' | chpasswd \n",
                    "usermod -aG sudo student\n",
                    "usermod -aG docker student\n",
                    "service docker start\n\n"
                  ]]
              }
            }

      }
    }

  },

  "Outputs" : {
    "MasterPublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Master", "PublicDnsName" ] }
    },
    "MasterPublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Master", "PublicIp" ] }
    },
    "MasterPrivateIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Master", "PrivateIp" ] }
    },
    "Node1PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node1", "PublicDnsName" ] }
    },
    "Node1PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node1", "PublicIp" ] }
    },
    "Node1PrivateIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node1", "PrivateIp" ] }
    },
    "Node2PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node2", "PublicDnsName" ] }
    },
    "Node2PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node2", "PublicIp" ] }
    },
    "Node2PrivateIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "Node2", "PrivateIp" ] }
    }

  }
}
